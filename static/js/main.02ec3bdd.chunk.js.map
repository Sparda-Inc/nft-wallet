{"version":3,"sources":["functions/show.js","functions/sendNft.js","components/MediaCard.js","components/Results.js","functions/getName.js","components/NftGallery.js","components/ContractInput.js","functions/connect.js","App.js","index.js"],"names":["show","value","ele","document","getElementById","className","sendNft","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","address","tokenId","to","nftType","transition","sendTo","_window$zilPay","contracts","utils","contract","amount","gasPrice","wrap","_context","prev","next","localStorage","getItem","window","zilPay","crypto","fromBech32Address","toLowerCase","console","log","wallet","at","units","toQa","Units","Zil","Li","call","vname","type","gasLimit","Long","fromNumber","sent","stop","_x","_x2","_x3","apply","this","arguments","MediaCard","props","_useState","useState","_useState2","slicedToArray","addressInput","setAddressInput","_useState3","_useState4","sendBtn","setSendBtn","react_default","createElement","Card","sx","maxWidth","backgroundColor","CardMedia","component","image","source","alt","CardContent","Typography","token","gutterBottom","variant","name","id","code","color","describe","placeholder","onChange","e","target","onClick","CardActions","Button","size","Results","user","imgArray","setImageArray","useEffect","ownedIndex","data","JSON","stringify","jsonrpc","method","params","slice","xhr","XMLHttpRequest","addEventListener","_callee2","getResponse","owners","tokenIds","x","_context2","readyState","parse","responseText","values","result","token_owners","keys","length","push","map","_ref2","c","i","response","fetch","token_uris","json","resource_mimetype","old","concat","toConsumableArray","resource","title","description","media_type","open","setRequestHeader","send","key","indexOf","max","Math","floor","random","getName","data2","init","place","innerText","NftGallery","connectedUser","savedContracts","components_Results","ContractInput","setContract","setSavedContracts","_addContract","alert","abrupt","undefined","token_id_count","royalty_fee_bps","setItem","t0","Fragment","addContract","connect","observableAccount","subscribe","account","bech32","defaultAccount","base16","App","setUser","location","href","viewblock","components_ContractInput","components_NftGallery","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.02ec3bdd.chunk.js","sourcesContent":["const show = (value) =>{\n\n    const ele =  document.getElementById(value).className\n      if (ele === 'hidden'){\n          \n          document.getElementById(value).className = 'imgContain'\n          }else{\n              \n              document.getElementById(value).className = 'hidden'\n          }\n  \n  }\n\n  export default show","\n\nconst sendNft = async (address, tokenId, to) => {\n\n\n\nconst nftType = localStorage.getItem(address)\n\nvar transition = null\n\nvar sendTo = to\n\n{nftType === 'ZRC1' ? transition = 'Transfer' : transition = 'TransferFrom'}\n\nif(sendTo[0] === 'z'){\n\n    sendTo = window.zilPay.crypto.fromBech32Address(to)\n\n}else{\n\n    sendTo = to.toLowerCase()\n\n}\n\n\nconsole.log(address, sendTo, transition, tokenId)\n\n\nconst { contracts, utils, wallet } = window.zilPay;\nconst contract = contracts.at(address);\n\nconst amount = utils.units.toQa(0, utils.units.Units.Zil);\nconst gasPrice = utils.units.toQa('1000', utils.units.Units.Li)\n\n// Sending to DS\nconst tx = await contract.call(\n  transition ,\n  [\n    {\n      vname: 'to',\n      type: 'ByStr20',\n      value: sendTo\n    },\n    {\n      vname: 'token_id',\n      type: 'Uint256',\n      value: tokenId\n    }\n  ],\n  {\n    amount,\n    gasPrice,\n    gasLimit: utils.Long.fromNumber(9000)\n  },\n  true\n)\n\n  \n}\n\nexport default sendNft","import React, { useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport show from '../functions/show';\nimport '../App.css';\nimport sendNft from '../functions/sendNft';\n\n\n\nexport default function MediaCard(props) {\n\n   \n    const [addressInput, setAddressInput]= useState('')\n    \n    const [sendBtn, setSendBtn]= useState('SEND')\n   \n\n       \n\n  return (\n    <Card className='cardBody' sx={{ maxWidth: 345, backgroundColor: '#adadad',}}>\n      <CardMedia\n        component=\"img\"\n        image={props.source}\n        alt=\"Some NFT Image\"\n      />\n      <CardContent>\n      <Typography>{'Token ID: '+props.token} </Typography>\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\n          {props.name}\n        </Typography>\n        <div id={props.code} className='hidden'>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {props.describe}\n        </Typography>\n        </div>\n\n        <div id={props.code + 'send'} className='hidden'>\n        <input className='send-input' placeholder='Send to...' onChange={e => setAddressInput(e.target.value)} type='text'/>\n        <button className='send-button' onClick={()=> sendNft(props.contract, props.token, addressInput)} >Send</button>\n        </div>\n\n      </CardContent>\n      <CardActions>\n     \n        <Button  onClick={()=> show(props.code)}  size=\"small\">View More</Button>\n        <Button onClick={ ( )=> {show(props.code + 'send'); {sendBtn === 'SEND'? setSendBtn('CANCEL'): setSendBtn('SEND')}}} size=\"small\">{sendBtn}</Button>\n      \n      </CardActions>\n    </Card>\n  );\n}\n\n\n\n\n","import React, {useState, useEffect} from 'react'\nimport MediaCard from './MediaCard';\n\nconst Results = (props) => {\n\n    const [user, setUser] = useState(props.user)\n\n    const [imgArray, setImageArray] = useState([])\n    \n\n    useEffect(() => {\n    \n    var ownedIndex = []\n\n    var data = JSON.stringify({ \n        \"id\": \"1\",\n        \"jsonrpc\": \"2.0\",\n        \"method\": \"GetSmartContractState\",\n        \"params\": [(props.address).slice(2)]\n      });\n\n      var xhr = new XMLHttpRequest();\n\n      \n\n      xhr.addEventListener(\"readystatechange\", async function() {\n\n        if(this.readyState === 4) {\n          var getResponse = await JSON.parse(this.responseText);\n\n          const owners = Object.values(getResponse.result.token_owners)\n          const tokenIds = Object.keys(getResponse.result.token_owners)\n\n          \n\n          for(var x=0; x < owners.length; x++){\n\n            if(owners[x] === (props.user).toLowerCase()){\n\n               ownedIndex.push(tokenIds[x])\n\n            }}\n\n          \n\n           ownedIndex.map(async (c, i) => {\n\n            const response = await fetch(getResponse.result.token_uris[c]);\n            const data = await response.json();\n\n            if(data.resource_mimetype && data.resource_mimetype === 'image/jpeg'){\n\n            setImageArray(old => [...old, {'image': data.resource, 'name': data.title, 'describe': data.description, 'tokenId': c }])\n\n            // var img = document.createElement('img')\n            // img.src = data.resource\n            // document.getElementById('imgCon'+props.address).appendChild(img)\n\n\n\n            }else{\n\n            if(data.media_type === 'video'){\n\n                // var video = document.createElement('video')\n                // video.src = data.video\n                // video.controls = 'controls'\n                // document.getElementById('imgCon'+props.address).appendChild(video)\n\n            }else{\n\n                setImageArray(old => [...old, {'image': data.image, 'name': data.title, 'describe': data.description, 'tokenId': c }]) \n            \n            // var img = document.createElement('img')\n            // img.src = data.image\n            // document.getElementById('imgCon'+props.address).appendChild(img)\n        }\n    }\n\n         })\n        }})\n\n        xhr.open(\"POST\", \"https://api.zilliqa.com/\");\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n        xhr.send(data);\n\n    }, [user])\n\n\n    function getRandomInt(max) {\n        return Math.floor(Math.random() * max);\n      }\n\n    \n    return (\n        <div id={props.address} className='hidden' >\n            <div className='nftContainer'  id={'imgCon'+props.address}>\n\n\n            {imgArray.map(c => \n        <div key={imgArray.indexOf(c)+'-card'}>\n            <MediaCard className='card' contract={props.address} source={c.image} name={c.name} describe={c.describe} token={c.tokenId} code={c.name + getRandomInt(1000)}/>\n        </div>)} \n\n            \n            </div>\n        </div>\n    )\n}\n\nexport default Results","const getName = contract => {\n\n    var data2 = JSON.stringify({ \n        \"id\": \"1\",\n        \"jsonrpc\": \"2.0\",\n        \"method\": \"GetSmartContractInit\",\n        \"params\": [contract.slice(2)]\n      });\n\n\n      var xhr = new XMLHttpRequest();\n    \n    \n      xhr.addEventListener(\"readystatechange\", async function() {\n        if(this.readyState === 4) {\n          var getResponse = await JSON.parse(this.responseText);\n  \n          var init = getResponse.result\n  \n          for(var place=0; place< init.length; place++){\n  \n            if(init[place].vname === \"name\"){\n  \n            var name = init[place].value\n\n            document.getElementById('con-'+contract).innerText = name\n  \n            }}}});\n        xhr.open(\"POST\", \"https://api.zilliqa.com/\");\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n        \n        xhr.send(data2);\n  \n      \n}\n\nexport default getName","import React, { useState } from 'react'\nimport '../App.css';\nimport Results from './Results';\nimport show from '../functions/show';\nimport getName from '../functions/getName';\n\n\nconst NftGallery = (props) => {\n\nconst [user, setUser] = useState(props.connectedUser)\n\nconst [savedContracts, setSavedContracts]= useState(Object.keys(localStorage))\n\nsavedContracts.map(c => getName(c))\n\n\n  return (\n    <div>\n    <h1>Nft Gallery</h1>\n    {savedContracts.map(c => \n        <div key={savedContracts.indexOf(c)}>\n            <h1 className='collection_title' id={'con-'+c} onClick={()=> {show(c)}}>Loading Name...</h1>\n            <Results user={user} address={c} />\n        </div>)} \n    </div>\n  )\n}\n\nexport default NftGallery","import React, {useState} from 'react'\n\nconst ContractInput = () => {\n    const [contract, setContract]= useState('')\n\n    const [savedContracts, setSavedContracts]= useState(Object.keys(localStorage))\n\n\n    async function addContract(key, nftType){\n\n        if(Object.keys(localStorage).indexOf(key) > -1){    \n                        \n            alert(\"already added\")\n        \n            return\n        }else{\n    \n                var data = JSON.stringify({ \n                    \"id\": \"1\",\n                    \"jsonrpc\": \"2.0\",\n                    \"method\": \"GetSmartContractState\",\n                    \"params\": [key.slice(2)]\n                  });\n                  \n                  var xhr = new XMLHttpRequest();\n                  \n                 \n                  xhr.addEventListener(\"readystatechange\", async function() {\n    \n                   \n                    if(this.readyState === 4) {\n    \n                        try{\n                      var getResponse = await JSON.parse(this.responseText);\n    \n                      console.log(getResponse)\n                        \n                      if(getResponse.result.token_id_count !== undefined){\n    \n                        if(getResponse.result.royalty_fee_bps){\n    \n                           // setZrcType('ZRC6')\n                           localStorage.setItem(key, 'ZRC6')\n    \n                           savedContracts.concat(key)\n                           \n                           setSavedContracts(savedContracts)\n    \n                          \n                           \n                        }else{\n    \n                           // setZrcType('ZRC1')\n                           localStorage.setItem(key, 'ZRC1')\n    \n                           savedContracts.concat(key)\n    \n                           setSavedContracts(savedContracts)\n    \n                          \n                         \n                        }\n    \n                      }else{\n    \n                        alert('Not a NFT contract')\n                       \n                      }\n    \n                     \n                    }catch(err){alert('Contract Not Found');}\n    \n                    }})\n    \n            xhr.open(\"POST\", \"https://api.zilliqa.com/\");\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    \n    xhr.send(data);\n    }}\n\n\n\n\n  return (\n    <>\n    <input  onChange={e => setContract(e.target.value)} type='text'/>\n    <button onClick={() => addContract(contract, 'NFT')}>ADD Contract</button>\n    \n    </>\n  )\n}\n\n\nexport default ContractInput","\n\nconst connect = async () => {\n \nconst isConnect = await window.zilPay.wallet.connect();\n\n\n  if (isConnect) {\n\n  const accountStreamChanged = window\n  .zilPay\n  .wallet\n  .observableAccount()\n  .subscribe(account => console.log(account.bech32));\n// accountStreamChanged.unsubscribe();\n\nreturn window.zilPay.wallet.defaultAccount.base16\n\n}\n\n\n\n\n\n}\n\n\n\nexport default connect","import React, {useState} from 'react'\nimport './App.css';\nimport NftGallery from './components/NftGallery';\nimport ContractInput from './components/ContractInput';\nimport connect from './functions/connect';\n\n\nfunction App() {\n\n  const [user, setUser] = useState(window.zilPay.wallet.defaultAccount)\n\n  function viewblock(user){\n\n      window.location.href=`https://viewblock.io/zilliqa/address/${user}`;\n\n  }\n  \n\n  return (\n   <div className='app'>\n\n    <p>Must Have Zilpay Installed</p>\n    {user === null? null: <h1 onClick={()=> viewblock(user.bech32)}>{ user.bech32}</h1>}\n    <ContractInput /><br/> <br />\n    {user === null ? \n      <button onClick={ async ()=>{ await connect(); setUser(window.zilPay.wallet.defaultAccount) } }>Connect</button>: <NftGallery connectedUser={user.base16} />}\n \n   </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}